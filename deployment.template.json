{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "containerRegistry": {
                "username": "$CONTAINER_REGISTRY_USERNAME",
                "password": "$CONTAINER_REGISTRY_PASSWORD",
                "address": "$CONTAINER_REGISTRY_ADDRESS"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "usePersistentStorage": {
                "value": "false"
              },
              "amqpSettings__enabled": {
                "value": false
              },
              "httpSettings__enabled": {
                "value": false
              }
            },
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "NVIDIADeepStreamSDK": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "devinacrforscz.azurecr.io/custom-deepstream64:resnet18",
              "createOptions": {
                "Entrypoint": [
                  "/usr/bin/deepstream-test5-app",
                  "-c",
                  "test5_config_file_src_infer_azure_iotedge_nano_64sources.txt",
                  "-p",
                  "1",
                  "-m",
                  "1"
                ],
                "ExposedPorts": {
                  "554/tcp": {}
                },
                "HostConfig": {
                  "runtime": "nvidia",
                  "PortBindings": {
                    "554/tcp": [
                      {
                        "HostPort": "554"
                      }
                    ]
                  }
                },
                "WorkingDir": "/root/deepstream_sdk_v4.0.2_x86_64/sources/apps/sample_apps/deepstream-test5/configs/"
              }
            }
          },
          "TransformDeepStreamData": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.TransformDeepStreamData}",
              "createOptions": {}
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "TransformToIoTHub": "FROM /messages/modules/TransformDeepStreamData/outputs/* INTO $upstream",
          "DeepstreamToTransform": "FROM /messages/modules/NVIDIADeepStreamSDK/outputs/* INTO BrokeredEndpoint(\"/modules/TransformDeepStreamData/inputs/input1\")"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "TransformDeepStreamData": {
      "properties.desired": {
        "SendData": true,
        "SendInterval": 5
      }
    }
  }
}